#version 450
layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(binding = 1, std430) buffer BufferOut
{
    vec4 _m0[];
} dataOut;

void main()
{
    vec2 rotatedUv = vec2(float((int(gl_GlobalInvocationID.x) % 4096) - 2048) * 0.000732421875, float((int(gl_GlobalInvocationID.x) / 4096) - 2048) * 0.000732421875);
    int _309;
    vec2 _312;
    _312 = vec2(dot(rotatedUv, vec2(0.4999999701976776123046875, 0.866025447845458984375)), dot(rotatedUv, vec2(-vec2(0.4999999701976776123046875, 0.866025447845458984375).y, vec2(0.4999999701976776123046875, 0.866025447845458984375).x))) * 0.89999997615814208984375;
    _309 = 0;
    bool _263;
    vec2 _281;
    int _283;
    int _315;
    bool _307 = true;
    int _308 = 0;
    for (; _307 && (_308 < 1000); _312 = _281, _309 = _315, _308 = _283, _307 = _263)
    {
        _263 = length(_312) < 2.0;
        if (_263)
        {
            _315 = _309 + 1;
        }
        else
        {
            _315 = _309;
        }
        float _268 = _312.x;
        float _269 = _312.y;
        _281 = vec2((_268 * _268) - (_269 * _269), (2.0 * _268) * _269) + vec2(0.3549999892711639404296875);
        _283 = _308 + 1;
    }
    vec4 _311;
    if (_309 > 20)
    {
        float f = float(_309) * 0.00999999977648258209228515625;
        float _336 = (f > 1.0) ? 1.0 : f;
        float _289 = 1.0 - _336;
        vec3 _306 = ((vec3(0.0313725508749485015869140625, 0.086274512112140655517578125, 0.407843172550201416015625) * (_289 * _289)) + (vec3(0.2431372702121734619140625, 0.3215686380863189697265625, 0.780392229557037353515625) * ((2.0 * _336) * _289))) + (vec3(0.866666734218597412109375, 0.913725554943084716796875, 1.0) * (_336 * _336));
        _311 = vec4(_306.x, _306.y, _306.z, 1.0);
    }
    else
    {
        _311 = vec4(0.0313725508749485015869140625, 0.086274512112140655517578125, 0.4078431427478790283203125, 1.0);
    }
    dataOut._m0[int(gl_GlobalInvocationID.x)] = _311;
}

